/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-01-14 17:53:03 UTC)
 * on 2015-02-20 at 16:51:34 UTC 
 * Modify at your own risk.
 */

package com.example.domy.rewit.myApi;

/**
 * Service definition for MyApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.19.1 of the myApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "myApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getListReview".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetListReview#execute()} method to invoke the remote operation.
   *
   * @param placeID
   * @return the request
   */
  public GetListReview getListReview(java.lang.String placeID) throws java.io.IOException {
    GetListReview result = new GetListReview(placeID);
    initialize(result);
    return result;
  }

  public class GetListReview extends MyApiRequest<com.example.domy.rewit.myApi.model.ReviewListBean> {

    private static final String REST_PATH = "reviewlistbean/{placeID}";

    /**
     * Create a request for the method "getListReview".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetListReview#execute()} method to invoke the remote operation. <p>
     * {@link GetListReview#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
     * equest)} must be called to initialize this instance immediately after invoking the constructor.
     * </p>
     *
     * @param placeID
     * @since 1.13
     */
    protected GetListReview(java.lang.String placeID) {
      super(MyApi.this, "GET", REST_PATH, null, com.example.domy.rewit.myApi.model.ReviewListBean.class);
      this.placeID = com.google.api.client.util.Preconditions.checkNotNull(placeID, "Required parameter placeID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetListReview setAlt(java.lang.String alt) {
      return (GetListReview) super.setAlt(alt);
    }

    @Override
    public GetListReview setFields(java.lang.String fields) {
      return (GetListReview) super.setFields(fields);
    }

    @Override
    public GetListReview setKey(java.lang.String key) {
      return (GetListReview) super.setKey(key);
    }

    @Override
    public GetListReview setOauthToken(java.lang.String oauthToken) {
      return (GetListReview) super.setOauthToken(oauthToken);
    }

    @Override
    public GetListReview setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetListReview) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetListReview setQuotaUser(java.lang.String quotaUser) {
      return (GetListReview) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetListReview setUserIp(java.lang.String userIp) {
      return (GetListReview) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String placeID;

    /**

     */
    public java.lang.String getPlaceID() {
      return placeID;
    }

    public GetListReview setPlaceID(java.lang.String placeID) {
      this.placeID = placeID;
      return this;
    }

    @Override
    public GetListReview set(String parameterName, Object value) {
      return (GetListReview) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertReview".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link InsertReview#execute()} method to invoke the remote operation.
   *
   * @param placeID
   * @param userID
   * @param valutation
   * @param description
   * @return the request
   */
  public InsertReview insertReview(java.lang.String placeID, java.lang.String userID, java.lang.Integer valutation, java.lang.String description) throws java.io.IOException {
    InsertReview result = new InsertReview(placeID, userID, valutation, description);
    initialize(result);
    return result;
  }

  public class InsertReview extends MyApiRequest<com.example.domy.rewit.myApi.model.ReviewBean> {

    private static final String REST_PATH = "reviewbean/{placeID}/{userID}/{valutation}/{description}";

    /**
     * Create a request for the method "insertReview".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link InsertReview#execute()} method to invoke the remote operation. <p>
     * {@link
     * InsertReview#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param placeID
     * @param userID
     * @param valutation
     * @param description
     * @since 1.13
     */
    protected InsertReview(java.lang.String placeID, java.lang.String userID, java.lang.Integer valutation, java.lang.String description) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.domy.rewit.myApi.model.ReviewBean.class);
      this.placeID = com.google.api.client.util.Preconditions.checkNotNull(placeID, "Required parameter placeID must be specified.");
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
      this.valutation = com.google.api.client.util.Preconditions.checkNotNull(valutation, "Required parameter valutation must be specified.");
      this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
    }

    @Override
    public InsertReview setAlt(java.lang.String alt) {
      return (InsertReview) super.setAlt(alt);
    }

    @Override
    public InsertReview setFields(java.lang.String fields) {
      return (InsertReview) super.setFields(fields);
    }

    @Override
    public InsertReview setKey(java.lang.String key) {
      return (InsertReview) super.setKey(key);
    }

    @Override
    public InsertReview setOauthToken(java.lang.String oauthToken) {
      return (InsertReview) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertReview setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertReview) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertReview setQuotaUser(java.lang.String quotaUser) {
      return (InsertReview) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertReview setUserIp(java.lang.String userIp) {
      return (InsertReview) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String placeID;

    /**

     */
    public java.lang.String getPlaceID() {
      return placeID;
    }

    public InsertReview setPlaceID(java.lang.String placeID) {
      this.placeID = placeID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public InsertReview setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer valutation;

    /**

     */
    public java.lang.Integer getValutation() {
      return valutation;
    }

    public InsertReview setValutation(java.lang.Integer valutation) {
      this.valutation = valutation;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public InsertReview setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @Override
    public InsertReview set(String parameterName, Object value) {
      return (InsertReview) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "nearbyEntityList".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link NearbyEntityList#execute()} method to invoke the remote operation.
   *
   * @param placeID
   * @return the request
   */
  public NearbyEntityList nearbyEntityList(java.util.List<java.lang.String> placeID) throws java.io.IOException {
    NearbyEntityList result = new NearbyEntityList(placeID);
    initialize(result);
    return result;
  }

  public class NearbyEntityList extends MyApiRequest<com.example.domy.rewit.myApi.model.EntityListBean> {

    private static final String REST_PATH = "NearbyEntity/{placeID}";

    /**
     * Create a request for the method "nearbyEntityList".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link NearbyEntityList#execute()} method to invoke the remote operation.
     * <p> {@link NearbyEntityList#initialize(com.google.api.client.googleapis.services.AbstractGoogle
     * ClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param placeID
     * @since 1.13
     */
    protected NearbyEntityList(java.util.List<java.lang.String> placeID) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.domy.rewit.myApi.model.EntityListBean.class);
      this.placeID = com.google.api.client.util.Preconditions.checkNotNull(placeID, "Required parameter placeID must be specified.");
    }

    @Override
    public NearbyEntityList setAlt(java.lang.String alt) {
      return (NearbyEntityList) super.setAlt(alt);
    }

    @Override
    public NearbyEntityList setFields(java.lang.String fields) {
      return (NearbyEntityList) super.setFields(fields);
    }

    @Override
    public NearbyEntityList setKey(java.lang.String key) {
      return (NearbyEntityList) super.setKey(key);
    }

    @Override
    public NearbyEntityList setOauthToken(java.lang.String oauthToken) {
      return (NearbyEntityList) super.setOauthToken(oauthToken);
    }

    @Override
    public NearbyEntityList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (NearbyEntityList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public NearbyEntityList setQuotaUser(java.lang.String quotaUser) {
      return (NearbyEntityList) super.setQuotaUser(quotaUser);
    }

    @Override
    public NearbyEntityList setUserIp(java.lang.String userIp) {
      return (NearbyEntityList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> placeID;

    /**

     */
    public java.util.List<java.lang.String> getPlaceID() {
      return placeID;
    }

    public NearbyEntityList setPlaceID(java.util.List<java.lang.String> placeID) {
      this.placeID = placeID;
      return this;
    }

    @Override
    public NearbyEntityList set(String parameterName, Object value) {
      return (NearbyEntityList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "registerUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RegisterUser#execute()} method to invoke the remote operation.
   *
   * @param userID
   * @param userFullname
   * @param userLocation
   * @param photoLink
   * @return the request
   */
  public RegisterUser registerUser(java.lang.String userID, java.lang.String userFullname, java.lang.String userLocation, java.lang.String photoLink) throws java.io.IOException {
    RegisterUser result = new RegisterUser(userID, userFullname, userLocation, photoLink);
    initialize(result);
    return result;
  }

  public class RegisterUser extends MyApiRequest<com.example.domy.rewit.myApi.model.MyBean> {

    private static final String REST_PATH = "registerUser/{userID}/{userFullname}/{userLocation}/{photoLink}";

    /**
     * Create a request for the method "registerUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RegisterUser#execute()} method to invoke the remote operation. <p>
     * {@link
     * RegisterUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userID
     * @param userFullname
     * @param userLocation
     * @param photoLink
     * @since 1.13
     */
    protected RegisterUser(java.lang.String userID, java.lang.String userFullname, java.lang.String userLocation, java.lang.String photoLink) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.domy.rewit.myApi.model.MyBean.class);
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
      this.userFullname = com.google.api.client.util.Preconditions.checkNotNull(userFullname, "Required parameter userFullname must be specified.");
      this.userLocation = com.google.api.client.util.Preconditions.checkNotNull(userLocation, "Required parameter userLocation must be specified.");
      this.photoLink = com.google.api.client.util.Preconditions.checkNotNull(photoLink, "Required parameter photoLink must be specified.");
    }

    @Override
    public RegisterUser setAlt(java.lang.String alt) {
      return (RegisterUser) super.setAlt(alt);
    }

    @Override
    public RegisterUser setFields(java.lang.String fields) {
      return (RegisterUser) super.setFields(fields);
    }

    @Override
    public RegisterUser setKey(java.lang.String key) {
      return (RegisterUser) super.setKey(key);
    }

    @Override
    public RegisterUser setOauthToken(java.lang.String oauthToken) {
      return (RegisterUser) super.setOauthToken(oauthToken);
    }

    @Override
    public RegisterUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RegisterUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RegisterUser setQuotaUser(java.lang.String quotaUser) {
      return (RegisterUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public RegisterUser setUserIp(java.lang.String userIp) {
      return (RegisterUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public RegisterUser setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userFullname;

    /**

     */
    public java.lang.String getUserFullname() {
      return userFullname;
    }

    public RegisterUser setUserFullname(java.lang.String userFullname) {
      this.userFullname = userFullname;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userLocation;

    /**

     */
    public java.lang.String getUserLocation() {
      return userLocation;
    }

    public RegisterUser setUserLocation(java.lang.String userLocation) {
      this.userLocation = userLocation;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String photoLink;

    /**

     */
    public java.lang.String getPhotoLink() {
      return photoLink;
    }

    public RegisterUser setPhotoLink(java.lang.String photoLink) {
      this.photoLink = photoLink;
      return this;
    }

    @Override
    public RegisterUser set(String parameterName, Object value) {
      return (RegisterUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "retrieveLocalLeaderboard".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RetrieveLocalLeaderboard#execute()} method to invoke the remote
   * operation.
   *
   * @param userID
   * @param userLocation
   * @return the request
   */
  public RetrieveLocalLeaderboard retrieveLocalLeaderboard(java.lang.String userID, java.lang.String userLocation) throws java.io.IOException {
    RetrieveLocalLeaderboard result = new RetrieveLocalLeaderboard(userID, userLocation);
    initialize(result);
    return result;
  }

  public class RetrieveLocalLeaderboard extends MyApiRequest<com.example.domy.rewit.myApi.model.LeaderboardBean> {

    private static final String REST_PATH = "RetrieveLocalLeaderboard/{userID}/{userLocation}";

    /**
     * Create a request for the method "retrieveLocalLeaderboard".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RetrieveLocalLeaderboard#execute()} method to invoke the remote
     * operation. <p> {@link RetrieveLocalLeaderboard#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param userID
     * @param userLocation
     * @since 1.13
     */
    protected RetrieveLocalLeaderboard(java.lang.String userID, java.lang.String userLocation) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.domy.rewit.myApi.model.LeaderboardBean.class);
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
      this.userLocation = com.google.api.client.util.Preconditions.checkNotNull(userLocation, "Required parameter userLocation must be specified.");
    }

    @Override
    public RetrieveLocalLeaderboard setAlt(java.lang.String alt) {
      return (RetrieveLocalLeaderboard) super.setAlt(alt);
    }

    @Override
    public RetrieveLocalLeaderboard setFields(java.lang.String fields) {
      return (RetrieveLocalLeaderboard) super.setFields(fields);
    }

    @Override
    public RetrieveLocalLeaderboard setKey(java.lang.String key) {
      return (RetrieveLocalLeaderboard) super.setKey(key);
    }

    @Override
    public RetrieveLocalLeaderboard setOauthToken(java.lang.String oauthToken) {
      return (RetrieveLocalLeaderboard) super.setOauthToken(oauthToken);
    }

    @Override
    public RetrieveLocalLeaderboard setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RetrieveLocalLeaderboard) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RetrieveLocalLeaderboard setQuotaUser(java.lang.String quotaUser) {
      return (RetrieveLocalLeaderboard) super.setQuotaUser(quotaUser);
    }

    @Override
    public RetrieveLocalLeaderboard setUserIp(java.lang.String userIp) {
      return (RetrieveLocalLeaderboard) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public RetrieveLocalLeaderboard setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userLocation;

    /**

     */
    public java.lang.String getUserLocation() {
      return userLocation;
    }

    public RetrieveLocalLeaderboard setUserLocation(java.lang.String userLocation) {
      this.userLocation = userLocation;
      return this;
    }

    @Override
    public RetrieveLocalLeaderboard set(String parameterName, Object value) {
      return (RetrieveLocalLeaderboard) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateReview".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link UpdateReview#execute()} method to invoke the remote operation.
   *
   * @param placeID
   * @param userID
   * @param valutation
   * @param description
   * @return the request
   */
  public UpdateReview updateReview(java.lang.String placeID, java.lang.String userID, java.lang.Integer valutation, java.lang.String description) throws java.io.IOException {
    UpdateReview result = new UpdateReview(placeID, userID, valutation, description);
    initialize(result);
    return result;
  }

  public class UpdateReview extends MyApiRequest<com.example.domy.rewit.myApi.model.MyBean> {

    private static final String REST_PATH = "mybean/{placeID}/{userID}/{valutation}/{description}";

    /**
     * Create a request for the method "updateReview".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link UpdateReview#execute()} method to invoke the remote operation. <p>
     * {@link
     * UpdateReview#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param placeID
     * @param userID
     * @param valutation
     * @param description
     * @since 1.13
     */
    protected UpdateReview(java.lang.String placeID, java.lang.String userID, java.lang.Integer valutation, java.lang.String description) {
      super(MyApi.this, "PUT", REST_PATH, null, com.example.domy.rewit.myApi.model.MyBean.class);
      this.placeID = com.google.api.client.util.Preconditions.checkNotNull(placeID, "Required parameter placeID must be specified.");
      this.userID = com.google.api.client.util.Preconditions.checkNotNull(userID, "Required parameter userID must be specified.");
      this.valutation = com.google.api.client.util.Preconditions.checkNotNull(valutation, "Required parameter valutation must be specified.");
      this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
    }

    @Override
    public UpdateReview setAlt(java.lang.String alt) {
      return (UpdateReview) super.setAlt(alt);
    }

    @Override
    public UpdateReview setFields(java.lang.String fields) {
      return (UpdateReview) super.setFields(fields);
    }

    @Override
    public UpdateReview setKey(java.lang.String key) {
      return (UpdateReview) super.setKey(key);
    }

    @Override
    public UpdateReview setOauthToken(java.lang.String oauthToken) {
      return (UpdateReview) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateReview setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateReview) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateReview setQuotaUser(java.lang.String quotaUser) {
      return (UpdateReview) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateReview setUserIp(java.lang.String userIp) {
      return (UpdateReview) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String placeID;

    /**

     */
    public java.lang.String getPlaceID() {
      return placeID;
    }

    public UpdateReview setPlaceID(java.lang.String placeID) {
      this.placeID = placeID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userID;

    /**

     */
    public java.lang.String getUserID() {
      return userID;
    }

    public UpdateReview setUserID(java.lang.String userID) {
      this.userID = userID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer valutation;

    /**

     */
    public java.lang.Integer getValutation() {
      return valutation;
    }

    public UpdateReview setValutation(java.lang.Integer valutation) {
      this.valutation = valutation;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public UpdateReview setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @Override
    public UpdateReview set(String parameterName, Object value) {
      return (UpdateReview) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MyApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MyApi}. */
    @Override
    public MyApi build() {
      return new MyApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyApiRequestInitializer(
        MyApiRequestInitializer myapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(myapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
